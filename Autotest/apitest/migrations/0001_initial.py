# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2018-12-17 08:32
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Apistep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apiname', models.CharField(max_length=100, verbose_name='接口名称')),
                ('apiurl', models.CharField(max_length=200, verbose_name='接口url')),
                ('apiparamvalue', models.CharField(max_length=800, verbose_name='请求参数和值')),
                ('apimethod', models.CharField(choices=[('get', 'get'), ('post', 'post'), ('put', 'put'), ('delete', 'delete')], default='get', max_length=200, null=True, verbose_name='请求方法')),
                ('apiresult', models.CharField(max_length=200, verbose_name='预期结果')),
                ('apistatus', models.BooleanField(verbose_name='测试结果是否通过')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='Apitest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apitestname', models.CharField(max_length=80, verbose_name='流程用例名')),
                ('apitestdesc', models.CharField(max_length=100, verbose_name='流程描述')),
                ('apitester', models.CharField(max_length=80, verbose_name='测试执行人')),
                ('apitestresult', models.CharField(default=200, max_length=200)),
                ('apiteststatus', models.BooleanField(default=1)),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '流程场景接口',
                'verbose_name_plural': '流程场景接口',
            },
        ),
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('db_name', models.CharField(max_length=100, verbose_name='数据库名称')),
                ('db_ip', models.CharField(max_length=80, verbose_name='数据库IP地址')),
                ('db_port', models.IntegerField(verbose_name='数据库端口')),
                ('db_user', models.CharField(max_length=60, verbose_name='数据库登陆名')),
                ('db_password', models.CharField(max_length=100, verbose_name='数据库登陆密码')),
                ('db_desc', models.CharField(max_length=200, verbose_name='数据库描述')),
            ],
        ),
        migrations.CreateModel(
            name='Enveronment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('evn_name', models.CharField(max_length=100, verbose_name='环境名称')),
                ('evn_ip', models.CharField(max_length=200, verbose_name='Ip地址')),
                ('evn_port', models.CharField(max_length=100, verbose_name='端口号')),
                ('evn_desc', models.CharField(max_length=100, verbose_name='环境描述')),
            ],
        ),
        migrations.CreateModel(
            name='Modules',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('module_name', models.CharField(max_length=100, verbose_name='模块名称')),
                ('module_tester', models.CharField(max_length=50, verbose_name='模块测试人员')),
                ('module_developer', models.CharField(max_length=50, verbose_name='模块开发人员')),
                ('module_status', models.BooleanField()),
                ('module_desc', models.CharField(max_length=300, null=True, verbose_name='模块描述')),
            ],
        ),
        migrations.CreateModel(
            name='Modules_Interface',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('api_name', models.CharField(max_length=50, verbose_name='接口名')),
                ('api_url', models.CharField(max_length=100, verbose_name='接口地址')),
                ('api_canshu', models.CharField(max_length=100, verbose_name='接口参数')),
                ('api_response', models.CharField(max_length=200, verbose_name='接口返回值')),
                ('api_desc', models.CharField(max_length=200, verbose_name='接口说明')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.Modules')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=64, verbose_name='项目名称')),
                ('product_desc', models.CharField(max_length=200, verbose_name='项目描述')),
                ('producter', models.CharField(max_length=200, verbose_name='项目负责人')),
                ('create_time', models.DateTimeField(auto_now=True, verbose_name='创建时间')),
                ('prpducter_version', models.CharField(max_length=20, null=True, verbose_name='项目版本')),
                ('producter_tester', models.CharField(max_length=50, verbose_name='项目测试人员')),
                ('producter_state', models.BooleanField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('case_executor', models.CharField(max_length=100, verbose_name='测试执行人')),
                ('case_success', models.CharField(max_length=100, verbose_name='用例通过数')),
                ('case_fail', models.CharField(max_length=100, verbose_name='用例失败数')),
                ('case_count', models.CharField(max_length=100, verbose_name='用例总数')),
                ('report_html', models.CharField(max_length=200, verbose_name='报告')),
            ],
        ),
        migrations.CreateModel(
            name='Set',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('set_name', models.CharField(max_length=100, verbose_name='设置名')),
                ('set_value', models.CharField(max_length=100, verbose_name='设置值')),
            ],
        ),
        migrations.CreateModel(
            name='Single_interface',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('single_interface_name', models.CharField(max_length=100, verbose_name='接口用例标题')),
                ('single_interface_url', models.CharField(max_length=100, verbose_name='接口地址')),
                ('single_interface_paragram', models.CharField(max_length=100, verbose_name='接口请求参数')),
                ('single_interface_desc', models.CharField(max_length=100, null=True, verbose_name='用例说明')),
                ('single_interface_method', models.CharField(choices=[('0', 'get'), ('1', 'post'), ('2', 'put'), ('3', 'delete'), ('4', 'patch')], default=0, max_length=200, verbose_name='请求方法')),
                ('single_interface_result', models.CharField(max_length=200, verbose_name='预期结果')),
                ('create_time', models.DateField(auto_now=True, verbose_name='创建时间')),
                ('single_interface', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.Modules_Interface')),
            ],
        ),
        migrations.CreateModel(
            name='Sql_admin',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sql_name', models.CharField(max_length=200, verbose_name='sql名')),
                ('sql_content', models.CharField(max_length=500, verbose_name='sql语句')),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_mobile', models.CharField(max_length=100, verbose_name='用户手机号')),
                ('user_token', models.CharField(max_length=100, verbose_name='用户token')),
            ],
        ),
        migrations.AddField(
            model_name='modules',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.Product'),
        ),
        migrations.AddField(
            model_name='apitest',
            name='apitest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.Modules'),
        ),
        migrations.AddField(
            model_name='apistep',
            name='apitest',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apitest.Apitest'),
        ),
    ]
